Metadata-Version: 2.1
Name: mypy-boto3-finspace
Version: 1.17.69.0
Summary: Type annotations for boto3.finspace 1.17.69 service, generated by mypy-boto3-buider 4.10.0
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: boto3 finspace type-annotations boto3-stubs mypy typeshed autocomplete auto-generated
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: typing-extensions ; python_version < "3.8"

# mypy-boto3-finspace

[![PyPI - mypy-boto3-finspace](https://img.shields.io/pypi/v/mypy-boto3-finspace.svg?color=blue)](https://pypi.org/project/mypy-boto3-finspace)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-finspace.svg?color=blue)](https://pypi.org/project/mypy-boto3-finspace)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dw/mypy-boto3-finspace?color=blue)](https://pypistats.org/packages/mypy-boto3-finspace)

![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/master/logo.png)

Type annotations for
[boto3.finspace 1.17.69](https://boto3.amazonaws.com/v1/documentation/api/1.17.69/reference/services/finspace.html#finspace)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-buider 4.10.0](https://github.com/vemel/mypy_boto3_builder).

More information can be found on
[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in
[mypy-boto3-finspace docs](https://github.com/vemel/mypy_boto3_builder/service_docs/mypy_boto3_finspace/README.md)

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/master/demo.gif)

- [mypy-boto3-finspace](#mypy-boto3-finspace)
  - [How to install](#how-to-install)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Literals](#literals)
    - [Typed dictionaries](#typed-dictionaries)

## How to install

Install `boto3-stubs` for `finspace` service.

```bash
python -m pip install boto3-stubs[finspace]
```

## Usage

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `boto-stubs[finspace]` in your environment:
  `python -m pip install 'boto3-stubs[finspace]'`

Both type checking and auto-complete should work for `finspace` service. No
explicit type annotations required, write your `boto3` code as usual.

### PyCharm

- Install `boto-stubs[finspace]` in your environment:
  `python -m pip install 'boto3-stubs[finspace]'`

Both type checking and auto-complete should work for `finspace` service. No
explicit type annotations required, write your `boto3` code as usual.
Auto-complete can be slow on big projects or if you have a lot of installed
`boto3-stubs` submodules.

### Other IDEs

Not tested, but as long as your IDE support `mypy` or `pyright`, everything
should work.

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `boto-stubs[finspace]` in your environment:
  `python -m pip install 'boto3-stubs[finspace]'`
- Run `mypy` as usual

Type checking should work for `finspace` service. No explicit type annotations
required, write your `boto3` code as usual.

### pyright

- Install `pyright`: `yarn global add pyright`
- Install `boto-stubs[finspace]` in your environment:
  `python -m pip install 'boto3-stubs[finspace]'`
- Optionally, you can install `boto3-stubs` to `typings` folder.

Type checking should work for `finspace` service. No explicit type annotations
required, write your `boto3` code as usual.

## Explicit type annotations

### Client annotations

`finspaceClient` provides annotations for `boto3.client("finspace")`.

```python
import boto3

from mypy_boto3_finspace import finspaceClient

client: finspaceClient = boto3.client("finspace")

# now client usage is checked by mypy and IDE should provide code auto-complete

# works for session as well
session = boto3.session.Session(region="us-west-1")
session_client: finspaceClient = session.client("finspace")
```

### Literals

`mypy_boto3_finspace.literals` module contains literals extracted from shapes
that can be used in user code for type checking.

```python
from mypy_boto3_finspace.literals import (
    EnvironmentStatus,
    FederationMode,
)

def check_value(value: EnvironmentStatus) -> bool:
    ...
```

### Typed dictionaries

`mypy_boto3_finspace.type_defs` module contains structures and shapes assembled
to typed dictionaries for additional type checking.

```python
from mypy_boto3_finspace.type_defs import (
    CreateEnvironmentResponseTypeDef,
    EnvironmentTypeDef,
    FederationParametersTypeDef,
    GetEnvironmentResponseTypeDef,
    ListEnvironmentsResponseTypeDef,
    ListTagsForResourceResponseTypeDef,
    UpdateEnvironmentResponseTypeDef,
)

def get_structure() -> CreateEnvironmentResponseTypeDef:
    return {
      ...
    }
```


