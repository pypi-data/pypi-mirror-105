# coding: utf-8

"""
    ExaVault API

    See our API reference documentation at https://www.exavault.com/developer/api-docs/  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: support@exavault.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class WebhookActivityAttributesV2(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'webhook_id': 'int',
        'webhook_format': 'str',
        'attempt_id': 'str',
        'account_id': 'str',
        'resend': 'bool',
        'endpoint_url': 'str',
        'event': 'str',
        'status': 'int',
        'ip_address': 'str',
        'response': 'str',
        'details': 'WebhookV2Details',
        'webhook_path': 'str',
        '_resource_path': 'str',
        'username': 'str',
        'created': 'str'
    }

    attribute_map = {
        'webhook_id': 'webhookId',
        'webhook_format': 'webhookFormat',
        'attempt_id': 'attemptId',
        'account_id': 'accountId',
        'resend': 'resend',
        'endpoint_url': 'endpointUrl',
        'event': 'event',
        'status': 'status',
        'ip_address': 'ipAddress',
        'response': 'response',
        'details': 'details',
        'webhook_path': 'webhookPath',
        '_resource_path': 'resourcePath',
        'username': 'username',
        'created': 'created'
    }

    def __init__(self, webhook_id=None, webhook_format=None, attempt_id=None, account_id=None, resend=None, endpoint_url=None, event=None, status=None, ip_address=None, response=None, details=None, webhook_path=None, _resource_path=None, username=None, created=None):  # noqa: E501
        """WebhookActivityAttributesV2 - a model defined in Swagger"""  # noqa: E501
        self._webhook_id = None
        self._webhook_format = None
        self._attempt_id = None
        self._account_id = None
        self._resend = None
        self._endpoint_url = None
        self._event = None
        self._status = None
        self._ip_address = None
        self._response = None
        self._details = None
        self._webhook_path = None
        self.__resource_path = None
        self._username = None
        self._created = None
        self.discriminator = None
        if webhook_id is not None:
            self.webhook_id = webhook_id
        if webhook_format is not None:
            self.webhook_format = webhook_format
        if attempt_id is not None:
            self.attempt_id = attempt_id
        if account_id is not None:
            self.account_id = account_id
        if resend is not None:
            self.resend = resend
        if endpoint_url is not None:
            self.endpoint_url = endpoint_url
        if event is not None:
            self.event = event
        if status is not None:
            self.status = status
        if ip_address is not None:
            self.ip_address = ip_address
        if response is not None:
            self.response = response
        if details is not None:
            self.details = details
        if webhook_path is not None:
            self.webhook_path = webhook_path
        if _resource_path is not None:
            self._resource_path = _resource_path
        if username is not None:
            self.username = username
        if created is not None:
            self.created = created

    @property
    def webhook_id(self):
        """Gets the webhook_id of this WebhookActivityAttributesV2.  # noqa: E501

        Unique ID of webhook configuration  # noqa: E501

        :return: The webhook_id of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: int
        """
        return self._webhook_id

    @webhook_id.setter
    def webhook_id(self, webhook_id):
        """Sets the webhook_id of this WebhookActivityAttributesV2.

        Unique ID of webhook configuration  # noqa: E501

        :param webhook_id: The webhook_id of this WebhookActivityAttributesV2.  # noqa: E501
        :type: int
        """

        self._webhook_id = webhook_id

    @property
    def webhook_format(self):
        """Gets the webhook_format of this WebhookActivityAttributesV2.  # noqa: E501

        What version of webhook message is being sent `v2`  # noqa: E501

        :return: The webhook_format of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: str
        """
        return self._webhook_format

    @webhook_format.setter
    def webhook_format(self, webhook_format):
        """Sets the webhook_format of this WebhookActivityAttributesV2.

        What version of webhook message is being sent `v2`  # noqa: E501

        :param webhook_format: The webhook_format of this WebhookActivityAttributesV2.  # noqa: E501
        :type: str
        """

        self._webhook_format = webhook_format

    @property
    def attempt_id(self):
        """Gets the attempt_id of this WebhookActivityAttributesV2.  # noqa: E501

        Event - retry identifier  # noqa: E501

        :return: The attempt_id of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: str
        """
        return self._attempt_id

    @attempt_id.setter
    def attempt_id(self, attempt_id):
        """Sets the attempt_id of this WebhookActivityAttributesV2.

        Event - retry identifier  # noqa: E501

        :param attempt_id: The attempt_id of this WebhookActivityAttributesV2.  # noqa: E501
        :type: str
        """

        self._attempt_id = attempt_id

    @property
    def account_id(self):
        """Gets the account_id of this WebhookActivityAttributesV2.  # noqa: E501

        Unique ID of account  # noqa: E501

        :return: The account_id of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this WebhookActivityAttributesV2.

        Unique ID of account  # noqa: E501

        :param account_id: The account_id of this WebhookActivityAttributesV2.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def resend(self):
        """Gets the resend of this WebhookActivityAttributesV2.  # noqa: E501

        Whether this attempt was a re-send of a previous attempt  # noqa: E501

        :return: The resend of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: bool
        """
        return self._resend

    @resend.setter
    def resend(self, resend):
        """Sets the resend of this WebhookActivityAttributesV2.

        Whether this attempt was a re-send of a previous attempt  # noqa: E501

        :param resend: The resend of this WebhookActivityAttributesV2.  # noqa: E501
        :type: bool
        """

        self._resend = resend

    @property
    def endpoint_url(self):
        """Gets the endpoint_url of this WebhookActivityAttributesV2.  # noqa: E501

        The URL the message was sent to  # noqa: E501

        :return: The endpoint_url of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: str
        """
        return self._endpoint_url

    @endpoint_url.setter
    def endpoint_url(self, endpoint_url):
        """Sets the endpoint_url of this WebhookActivityAttributesV2.

        The URL the message was sent to  # noqa: E501

        :param endpoint_url: The endpoint_url of this WebhookActivityAttributesV2.  # noqa: E501
        :type: str
        """

        self._endpoint_url = endpoint_url

    @property
    def event(self):
        """Gets the event of this WebhookActivityAttributesV2.  # noqa: E501

        Event type  # noqa: E501

        :return: The event of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: str
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this WebhookActivityAttributesV2.

        Event type  # noqa: E501

        :param event: The event of this WebhookActivityAttributesV2.  # noqa: E501
        :type: str
        """
        allowed_values = ["resources.upload", "resources.download", "resources.delete", "resources.rename", "resources.copy", "resources.move", "resources.compress", "resources.extract", "resources.createFolder", "shares.formSubmit"]  # noqa: E501
        if event not in allowed_values:
            raise ValueError(
                "Invalid value for `event` ({0}), must be one of {1}"  # noqa: E501
                .format(event, allowed_values)
            )

        self._event = event

    @property
    def status(self):
        """Gets the status of this WebhookActivityAttributesV2.  # noqa: E501

        HTTP Status Code returned by webhook listener  # noqa: E501

        :return: The status of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this WebhookActivityAttributesV2.

        HTTP Status Code returned by webhook listener  # noqa: E501

        :param status: The status of this WebhookActivityAttributesV2.  # noqa: E501
        :type: int
        """

        self._status = status

    @property
    def ip_address(self):
        """Gets the ip_address of this WebhookActivityAttributesV2.  # noqa: E501

        IP Address of related activity  # noqa: E501

        :return: The ip_address of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this WebhookActivityAttributesV2.

        IP Address of related activity  # noqa: E501

        :param ip_address: The ip_address of this WebhookActivityAttributesV2.  # noqa: E501
        :type: str
        """

        self._ip_address = ip_address

    @property
    def response(self):
        """Gets the response of this WebhookActivityAttributesV2.  # noqa: E501

        Body of web response returned by webhook listener  # noqa: E501

        :return: The response of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: str
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this WebhookActivityAttributesV2.

        Body of web response returned by webhook listener  # noqa: E501

        :param response: The response of this WebhookActivityAttributesV2.  # noqa: E501
        :type: str
        """

        self._response = response

    @property
    def details(self):
        """Gets the details of this WebhookActivityAttributesV2.  # noqa: E501


        :return: The details of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: WebhookV2Details
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this WebhookActivityAttributesV2.


        :param details: The details of this WebhookActivityAttributesV2.  # noqa: E501
        :type: WebhookV2Details
        """

        self._details = details

    @property
    def webhook_path(self):
        """Gets the webhook_path of this WebhookActivityAttributesV2.  # noqa: E501

        Path that webhook is watching  # noqa: E501

        :return: The webhook_path of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: str
        """
        return self._webhook_path

    @webhook_path.setter
    def webhook_path(self, webhook_path):
        """Sets the webhook_path of this WebhookActivityAttributesV2.

        Path that webhook is watching  # noqa: E501

        :param webhook_path: The webhook_path of this WebhookActivityAttributesV2.  # noqa: E501
        :type: str
        """

        self._webhook_path = webhook_path

    @property
    def _resource_path(self):
        """Gets the _resource_path of this WebhookActivityAttributesV2.  # noqa: E501

        Path of resource that matched webhook  # noqa: E501

        :return: The _resource_path of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: str
        """
        return self.__resource_path

    @_resource_path.setter
    def _resource_path(self, _resource_path):
        """Sets the _resource_path of this WebhookActivityAttributesV2.

        Path of resource that matched webhook  # noqa: E501

        :param _resource_path: The _resource_path of this WebhookActivityAttributesV2.  # noqa: E501
        :type: str
        """

        self.__resource_path = _resource_path

    @property
    def username(self):
        """Gets the username of this WebhookActivityAttributesV2.  # noqa: E501

        Username of related activity  # noqa: E501

        :return: The username of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this WebhookActivityAttributesV2.

        Username of related activity  # noqa: E501

        :param username: The username of this WebhookActivityAttributesV2.  # noqa: E501
        :type: str
        """

        self._username = username

    @property
    def created(self):
        """Gets the created of this WebhookActivityAttributesV2.  # noqa: E501

        Date and time of webhook message being generated by system  # noqa: E501

        :return: The created of this WebhookActivityAttributesV2.  # noqa: E501
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this WebhookActivityAttributesV2.

        Date and time of webhook message being generated by system  # noqa: E501

        :param created: The created of this WebhookActivityAttributesV2.  # noqa: E501
        :type: str
        """

        self._created = created

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WebhookActivityAttributesV2, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WebhookActivityAttributesV2):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
