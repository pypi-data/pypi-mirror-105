# coding: utf-8

"""
    ExaVault API

    See our API reference documentation at https://www.exavault.com/developer/api-docs/  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: support@exavault.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class WebhookV2EventDataResources(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'hash': 'str',
        'name': 'str',
        'type': 'str',
        'created_by': 'str',
        'upload_date': 'datetime',
        'created_at': 'datetime',
        'updated_at': 'datetime',
        'accessed_at': 'datetime',
        'path': 'str',
        'size': 'int',
        'file_count': 'int',
        'previewable': 'bool'
    }

    attribute_map = {
        'id': 'id',
        'hash': 'hash',
        'name': 'name',
        'type': 'type',
        'created_by': 'createdBy',
        'upload_date': 'uploadDate',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt',
        'accessed_at': 'accessedAt',
        'path': 'path',
        'size': 'size',
        'file_count': 'fileCount',
        'previewable': 'previewable'
    }

    def __init__(self, id=None, hash=None, name=None, type=None, created_by=None, upload_date=None, created_at=None, updated_at=None, accessed_at=None, path=None, size=None, file_count=None, previewable=None):  # noqa: E501
        """WebhookV2EventDataResources - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._hash = None
        self._name = None
        self._type = None
        self._created_by = None
        self._upload_date = None
        self._created_at = None
        self._updated_at = None
        self._accessed_at = None
        self._path = None
        self._size = None
        self._file_count = None
        self._previewable = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if hash is not None:
            self.hash = hash
        if name is not None:
            self.name = name
        if type is not None:
            self.type = type
        if created_by is not None:
            self.created_by = created_by
        if upload_date is not None:
            self.upload_date = upload_date
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at
        if accessed_at is not None:
            self.accessed_at = accessed_at
        if path is not None:
            self.path = path
        if size is not None:
            self.size = size
        if file_count is not None:
            self.file_count = file_count
        if previewable is not None:
            self.previewable = previewable

    @property
    def id(self):
        """Gets the id of this WebhookV2EventDataResources.  # noqa: E501

        Resource ID  # noqa: E501

        :return: The id of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WebhookV2EventDataResources.

        Resource ID  # noqa: E501

        :param id: The id of this WebhookV2EventDataResources.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def hash(self):
        """Gets the hash of this WebhookV2EventDataResources.  # noqa: E501

        Resource hash value  # noqa: E501

        :return: The hash of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this WebhookV2EventDataResources.

        Resource hash value  # noqa: E501

        :param hash: The hash of this WebhookV2EventDataResources.  # noqa: E501
        :type: str
        """

        self._hash = hash

    @property
    def name(self):
        """Gets the name of this WebhookV2EventDataResources.  # noqa: E501

        Resource name  # noqa: E501

        :return: The name of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WebhookV2EventDataResources.

        Resource name  # noqa: E501

        :param name: The name of this WebhookV2EventDataResources.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this WebhookV2EventDataResources.  # noqa: E501

        Type of resource `file` or `dir`  # noqa: E501

        :return: The type of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this WebhookV2EventDataResources.

        Type of resource `file` or `dir`  # noqa: E501

        :param type: The type of this WebhookV2EventDataResources.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def created_by(self):
        """Gets the created_by of this WebhookV2EventDataResources.  # noqa: E501

        Username who originally created resource  # noqa: E501

        :return: The created_by of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this WebhookV2EventDataResources.

        Username who originally created resource  # noqa: E501

        :param created_by: The created_by of this WebhookV2EventDataResources.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def upload_date(self):
        """Gets the upload_date of this WebhookV2EventDataResources.  # noqa: E501

        Date resource was first uploaded  # noqa: E501

        :return: The upload_date of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: datetime
        """
        return self._upload_date

    @upload_date.setter
    def upload_date(self, upload_date):
        """Sets the upload_date of this WebhookV2EventDataResources.

        Date resource was first uploaded  # noqa: E501

        :param upload_date: The upload_date of this WebhookV2EventDataResources.  # noqa: E501
        :type: datetime
        """

        self._upload_date = upload_date

    @property
    def created_at(self):
        """Gets the created_at of this WebhookV2EventDataResources.  # noqa: E501

        Date and time of resource creation  # noqa: E501

        :return: The created_at of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this WebhookV2EventDataResources.

        Date and time of resource creation  # noqa: E501

        :param created_at: The created_at of this WebhookV2EventDataResources.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this WebhookV2EventDataResources.  # noqa: E501

        Date and time resource was most recently changed  # noqa: E501

        :return: The updated_at of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this WebhookV2EventDataResources.

        Date and time resource was most recently changed  # noqa: E501

        :param updated_at: The updated_at of this WebhookV2EventDataResources.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def accessed_at(self):
        """Gets the accessed_at of this WebhookV2EventDataResources.  # noqa: E501

        Date and time resource was most recently downloaded  # noqa: E501

        :return: The accessed_at of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: datetime
        """
        return self._accessed_at

    @accessed_at.setter
    def accessed_at(self, accessed_at):
        """Sets the accessed_at of this WebhookV2EventDataResources.

        Date and time resource was most recently downloaded  # noqa: E501

        :param accessed_at: The accessed_at of this WebhookV2EventDataResources.  # noqa: E501
        :type: datetime
        """

        self._accessed_at = accessed_at

    @property
    def path(self):
        """Gets the path of this WebhookV2EventDataResources.  # noqa: E501

        Full path to resource  # noqa: E501

        :return: The path of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this WebhookV2EventDataResources.

        Full path to resource  # noqa: E501

        :param path: The path of this WebhookV2EventDataResources.  # noqa: E501
        :type: str
        """

        self._path = path

    @property
    def size(self):
        """Gets the size of this WebhookV2EventDataResources.  # noqa: E501

        Size of resource in bytes  # noqa: E501

        :return: The size of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this WebhookV2EventDataResources.

        Size of resource in bytes  # noqa: E501

        :param size: The size of this WebhookV2EventDataResources.  # noqa: E501
        :type: int
        """

        self._size = size

    @property
    def file_count(self):
        """Gets the file_count of this WebhookV2EventDataResources.  # noqa: E501

        Number of resources contained in this folder. If this is a file, fileCount is null  # noqa: E501

        :return: The file_count of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: int
        """
        return self._file_count

    @file_count.setter
    def file_count(self, file_count):
        """Sets the file_count of this WebhookV2EventDataResources.

        Number of resources contained in this folder. If this is a file, fileCount is null  # noqa: E501

        :param file_count: The file_count of this WebhookV2EventDataResources.  # noqa: E501
        :type: int
        """

        self._file_count = file_count

    @property
    def previewable(self):
        """Gets the previewable of this WebhookV2EventDataResources.  # noqa: E501

        Whether the resource can be previewed  # noqa: E501

        :return: The previewable of this WebhookV2EventDataResources.  # noqa: E501
        :rtype: bool
        """
        return self._previewable

    @previewable.setter
    def previewable(self, previewable):
        """Sets the previewable of this WebhookV2EventDataResources.

        Whether the resource can be previewed  # noqa: E501

        :param previewable: The previewable of this WebhookV2EventDataResources.  # noqa: E501
        :type: bool
        """

        self._previewable = previewable

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WebhookV2EventDataResources, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WebhookV2EventDataResources):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
