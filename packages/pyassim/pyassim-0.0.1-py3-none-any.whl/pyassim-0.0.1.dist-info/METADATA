Metadata-Version: 2.1
Name: pyassim
Version: 0.0.1
Summary: Package for data assimilation
Home-page: https://github.com/ZoneTsuyoshi/pyassim
Author: Tsuyoshi Ishizone
Author-email: tsuyoshi.ishizone@gmail.com
License: Copyright (c) 2016 The Python Packaging Authority (PyPA)        
        Permission is hereby granted, free of charge, to any person obtaining a copy of
        this software and associated documentation files (the "Software"), to deal in
        the Software without restriction, including without limitation the rights to
        use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
        of the Software, and to permit persons to whom the Software is furnished to do
        so, subject to the following conditions:        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.        
Platform: UNKNOWN
Requires-Python: >=3
Description-Content-Type: text/plain
Requires-Dist: numpy (>=1.13.3)

# Data Assimilation repository
- this repository is under development

## How to Import
- `python setup.py install`
- this package requires `numpy`

## How to Test
- `python setup.py test`

## How to Use
- please see the codes under `samples/`
    - `sample_dom.py` is an example w.r.t. KF and LOCK through a twin experiment of dample oscillation model.
    - `sample_advection.py` is an example w.r.t. LLOCK, SLOCK, and LSLOCK through a twin experiment of advection equation.
    - `sample_Lorenz.py` is an example w.r.t. EnKF, NEnKF, PF, and GPF through a twin experiment of Lorenz 63 model.
- this repository includes following methods
    - [x] Kalman Filter (KF)
    - [x] Ensemble KF (EnKF)
    - [x] Nonlinear Ensemble KF (NEnKF)
    - [x] Local Ensemble Transform KF (LETKF)
    - [x] Linear Opeartor Construction with the Kalman Filter (LOCK)
    - [x] Local LOCK (LLOCK)
    - [x] Spatially Uniform LOCK (SLOCK)
    - [x] Locally and Spatially Uniform LOCK (LSLOCK)
    - [x] Bayesian LOCK (BLOCK)
    - [x] Local BLOCK (LBLOCK)
    - [x] Locally and Spatially Uniform BLOCK (LSBLOCK)
    - [x] Particle Filter (PF)
    - [x] Gaussian PF (GPF)
    - [x] Variational Mapping PF (VMPF)
    - [x] Hidden Markov Model (HMM)
- if you tackle high-dimensional problems, this repository provides following methods for memory efficiency
    - [x] Kalman Filter (KF)
    - [x] Local LOCK (LLOCK)
    - [x] Spatially Uniform LOCK (SLOCK)
    - [x] Locally and Spatially Uniform LOCK (LSLOCK)
    - [ ] Local BLOCK (LBLOCK)
    - [ ] Locally and Spatially Uniform BLOCK (LSBLOCK)
- checked items are already developed, the others are under development

