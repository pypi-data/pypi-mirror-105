{"version":3,"sources":["webpack://@epi2melabs/epi2melabs-splashpage/./lib/asset.js","webpack://@epi2melabs/epi2melabs-splashpage/./lib/index.js","webpack://@epi2melabs/epi2melabs-splashpage/./lib/lib.js","webpack://@epi2melabs/epi2melabs-splashpage/./lib/types.js","webpack://@epi2melabs/epi2melabs-splashpage/./lib/widget.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAoD;AAC7C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yBAAyB,8DAAO,EAAE,mDAAmD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7E7B;AACL;AACJ;AACQ;AACb;AACG;AACX;AACF;AACvC;AACA;AACA;AACA;AACA;AACA,wBAAwB,6DAAwB;AAChD,uBAAuB,gEAAc,EAAE,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAgB,EAAE,2DAAS,EAAE,yEAAgB;AAC5D;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,YAAY;AACtE;AACA,0BAA0B,8DAAO;AACjC,4BAA4B,uDAAmB;AAC/C,iBAAiB;AACjB;AACA;AACA;AACA;AACA,0BAA0B,+DAAQ;AAClC,4BAA4B,wDAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gDAAY;AACtE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;;AC/DgB;AACzC;AACO;AACP,KAAK,wDAAoB;AACzB;AACA;AACA,SAAS;AACT,KAAK;AACL,KAAK,uDAAmB;AACxB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;AC7BO;AACP;AACA;AACA;AACA,CAAC,wCAAwC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJU;AACG;AACY;AACf;AACjB;AACN;AACrB;AACP,kCAAkC,2CAAO,IAAI,wBAAwB;AACrE;AACA,YAAY,0DAAmB,SAAS,wBAAwB;AAChE,QAAQ,0DAAmB,SAAS,wCAAwC;AAC5E;AACA,0BAA0B,MAAM,0DAAmB,SAAS,uCAAuC;AACnG,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,0BAA0B,MAAM,0DAAmB,SAAS,uCAAuC;AACnG,IAAI,0DAAmB;AACvB;AACA,QAAQ,6CAAM;AACd;AACA,0BAA0B,UAAU;AACpC,sCAAsC,+CAAQ;AAC9C;AACA;AACA;AACA,YAAY,0DAAmB,YAAY,mIAAmI;AAC9K,QAAQ,0DAAmB,SAAS,mCAAmC;AACvE,qBAAqB,0DAAmB;AACxC;AACA,mCAAmC,iCAAiC;AACpE,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA,eAAe,6CAAM;AACrB;AACA,YAAY,0DAAmB,YAAY,0BAA0B;AACrE,QAAQ,0DAAmB;AAC3B,YAAY,0DAAmB,CAAC,2EAAoB,GAAG,OAAO,mEAAY,yEAAyE;AACnJ,QAAQ,0DAAmB,SAAS,+BAA+B;AACnE,YAAY,0DAAmB;AAC/B,YAAY,0DAAmB;AAC/B;AACA;AACA,YAAY,0DAAmB;AAC/B;AACA;AACA,QAAQ,0DAAmB,SAAS,8BAA8B;AAClE,YAAY,0DAAmB,CAAC,2EAAoB,GAAG,0FAA0F;AACjJ;AACA,+BAA+B,yCAAyC;AACxE,WAAW,oCAAoC;AAC/C,sCAAsC,+CAAQ;AAC9C;AACA,2BAA2B,kDAAY;AACvC;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,0DAAmB,CAAC,uDAAc;AAClD;AACA,YAAY,0DAAmB,SAAS,qCAAqC;AAC7E,QAAQ,0DAAmB,SAAS,2CAA2C;AAC/E,YAAY,0DAAmB;AAC/B,YAAY,0DAAmB,QAAQ,kDAAkD;AACzF,gBAAgB,0DAAmB;AACnC,oBAAoB,0DAAmB,mBAAmB,mBAAmB;AAC7E,QAAQ,0DAAmB,QAAQ,yCAAyC,yBAAyB,0DAAmB,QAAQ,sBAAsB,UAAU,GAAG;AACnK,YAAY,0DAAmB,4BAA4B,sCAAsC,iDAAe,oDAAoD;AACpK;AACO,uCAAuC,6DAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB,SAAS,iCAAiC;AAC7E,YAAY,0DAAmB;AAC/B,uCAAuC,0DAAmB,wBAAwB,kBAAkB,UAAU,8EAA8E;AAC5L,YAAY,0DAAmB;AAC/B;AACA","file":"lib_index_js.04ac4efcb5011272f5a3.js","sourcesContent":["import { LabIcon } from '@jupyterlab/ui-components';\nexport const logoSVG = `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"148\" height=\"198\" viewBox=\"0 0 148 198\">\n    <defs>\n      <filter id=\"Rectangle_1\" x=\"0\" y=\"0\" width=\"148\" height=\"68\" filterUnits=\"userSpaceOnUse\">\n        <feOffset dy=\"3\" input=\"SourceAlpha\"/>\n        <feGaussianBlur stdDeviation=\"3\" result=\"blur\"/>\n        <feFlood flood-opacity=\"0.098\"/>\n        <feComposite operator=\"in\" in2=\"blur\"/>\n        <feComposite in=\"SourceGraphic\"/>\n      </filter>\n      <filter id=\"Rectangle_2\" x=\"0\" y=\"130\" width=\"148\" height=\"68\" filterUnits=\"userSpaceOnUse\">\n        <feOffset dy=\"3\" input=\"SourceAlpha\"/>\n        <feGaussianBlur stdDeviation=\"3\" result=\"blur-2\"/>\n        <feFlood flood-opacity=\"0.098\"/>\n        <feComposite operator=\"in\" in2=\"blur-2\"/>\n        <feComposite in=\"SourceGraphic\"/>\n      </filter>\n      <filter id=\"Rectangle_3\" x=\"0\" y=\"65\" width=\"73\" height=\"68\" filterUnits=\"userSpaceOnUse\">\n        <feOffset dy=\"3\" input=\"SourceAlpha\"/>\n        <feGaussianBlur stdDeviation=\"3\" result=\"blur-3\"/>\n        <feFlood flood-opacity=\"0.098\"/>\n        <feComposite operator=\"in\" in2=\"blur-3\"/>\n        <feComposite in=\"SourceGraphic\"/>\n      </filter>\n    </defs>\n    <g id=\"Component_1_2\" data-name=\"Component 1 – 2\" transform=\"translate(9 6)\">\n      <g transform=\"matrix(1, 0, 0, 1, -9, -6)\" filter=\"url(#Rectangle_1)\">\n        <rect id=\"Rectangle_1-2\" data-name=\"Rectangle 1\" width=\"130\" height=\"50\" rx=\"5\" transform=\"translate(9 6)\" fill=\"#08bbb2\"/>\n      </g>\n      <g transform=\"matrix(1, 0, 0, 1, -9, -6)\" filter=\"url(#Rectangle_2)\">\n        <rect id=\"Rectangle_2-2\" data-name=\"Rectangle 2\" width=\"130\" height=\"50\" rx=\"5\" transform=\"translate(9 136)\" fill=\"#0179a4\"/>\n      </g>\n      <g transform=\"matrix(1, 0, 0, 1, -9, -6)\" filter=\"url(#Rectangle_3)\">\n        <rect id=\"Rectangle_3-2\" data-name=\"Rectangle 3\" width=\"55\" height=\"50\" rx=\"5\" transform=\"translate(9 71)\" fill=\"#fccb10\"/>\n      </g>\n    </g>\n  </svg>\n`;\nconst logoSVGSmall = `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"42\" height=\"51\" viewBox=\"0 0 42 51\">\n    <defs>\n        <filter id=\"Rectangle_1\" x=\"0\" y=\"0\" width=\"42\" height=\"27\" filterUnits=\"userSpaceOnUse\">\n        <feOffset dy=\"3\" input=\"SourceAlpha\"/>\n        <feGaussianBlur stdDeviation=\"3\" result=\"blur\"/>\n        <feFlood flood-opacity=\"0.098\"/>\n        <feComposite operator=\"in\" in2=\"blur\"/>\n        <feComposite in=\"SourceGraphic\"/>\n        </filter>\n        <filter id=\"Rectangle_2\" x=\"0\" y=\"24\" width=\"42\" height=\"27\" filterUnits=\"userSpaceOnUse\">\n        <feOffset dy=\"3\" input=\"SourceAlpha\"/>\n        <feGaussianBlur stdDeviation=\"3\" result=\"blur-2\"/>\n        <feFlood flood-opacity=\"0.098\"/>\n        <feComposite operator=\"in\" in2=\"blur-2\"/>\n        <feComposite in=\"SourceGraphic\"/>\n        </filter>\n        <filter id=\"Rectangle_3\" x=\"0\" y=\"12\" width=\"28\" height=\"27\" filterUnits=\"userSpaceOnUse\">\n        <feOffset dy=\"3\" input=\"SourceAlpha\"/>\n        <feGaussianBlur stdDeviation=\"3\" result=\"blur-3\"/>\n        <feFlood flood-opacity=\"0.098\"/>\n        <feComposite operator=\"in\" in2=\"blur-3\"/>\n        <feComposite in=\"SourceGraphic\"/>\n        </filter>\n    </defs>\n    <g id=\"Component_2_1\" data-name=\"Component 2 – 1\" transform=\"translate(9 6)\">\n        <g transform=\"matrix(1, 0, 0, 1, -9, -6)\" filter=\"url(#Rectangle_1)\">\n        <rect id=\"Rectangle_1-2\" data-name=\"Rectangle 1\" width=\"24\" height=\"9\" rx=\"1\" transform=\"translate(9 6)\" fill=\"#08bbb2\"/>\n        </g>\n        <g transform=\"matrix(1, 0, 0, 1, -9, -6)\" filter=\"url(#Rectangle_2)\">\n        <rect id=\"Rectangle_2-2\" data-name=\"Rectangle 2\" width=\"24\" height=\"9\" rx=\"1\" transform=\"translate(9 30)\" fill=\"#0179a4\"/>\n        </g>\n        <g transform=\"matrix(1, 0, 0, 1, -9, -6)\" filter=\"url(#Rectangle_3)\">\n        <rect id=\"Rectangle_3-2\" data-name=\"Rectangle 3\" width=\"10\" height=\"9\" rx=\"1\" transform=\"translate(9 18)\" fill=\"#fccb10\"/>\n        </g>\n    </g>\n  </svg>\n`;\nexport const labsLogoIcon = new LabIcon({ name: 'ui-components:labs', svgstr: logoSVGSmall });\n","import { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { MainAreaWidget } from '@jupyterlab/apputils';\nimport { copyIcon, runIcon } from '@jupyterlab/ui-components';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { Epi2melabsLauncherWidget } from './widget';\nimport { NotebookAction } from './types';\nimport { labsLogoIcon } from './asset';\nconst PLUGIN_ID = '@epi2melabs/epi2melabs-splashpage:settings';\nconst COMMAND = 'create-epi2me-labs-splashpage';\nconst CATEGORY = 'EPI2ME Labs';\nconst createLauncherWidget = async (sections, shell, docTrack, setting) => {\n    // Build the widget and add it to the main area\n    const content = new Epi2melabsLauncherWidget(setting, docTrack, sections);\n    const widget = new MainAreaWidget({ content });\n    widget.title.label = 'EPI2ME Labs';\n    shell.add(widget, 'main');\n};\nconst extension = {\n    id: PLUGIN_ID,\n    requires: [IDocumentManager, ILauncher, ISettingRegistry],\n    autoStart: true,\n    activate: (app, docTrack, launcher, settings) => {\n        const { commands, shell } = app;\n        Promise.all([app.restored, settings.load(PLUGIN_ID)])\n            .then(([, setting]) => {\n            // Specify the sections to be shown\n            const workdirPath = setting.get('working_dir').composite;\n            const templatePath = setting.get('template_dir').composite;\n            const sections = [\n                {\n                    name: 'Recent notebooks',\n                    tooltip: `Displays notebooks in the ${workdirPath} directory`,\n                    path: workdirPath,\n                    icon: runIcon,\n                    action: NotebookAction.open\n                },\n                {\n                    name: 'EPI2ME Labs Templates',\n                    tooltip: 'Click on a template to copy it and get started',\n                    path: templatePath,\n                    icon: copyIcon,\n                    action: NotebookAction.clone\n                }\n            ];\n            createLauncherWidget(sections, shell, docTrack, setting);\n            commands.addCommand(COMMAND, {\n                caption: 'Create an EPI2ME Labs launcher',\n                label: 'EPI2ME Labs',\n                icon: args => (args['isPalette'] ? null : labsLogoIcon),\n                execute: () => {\n                    createLauncherWidget(sections, shell, docTrack, setting);\n                }\n            });\n            if (launcher) {\n                launcher.add({\n                    command: COMMAND,\n                    category: CATEGORY\n                });\n            }\n        });\n    }\n};\nexport default extension;\n","import { NotebookAction } from './types';\nconst IPYNB = '.ipynb';\nexport const actionCallbacks = {\n    [NotebookAction.clone]: async (e, docTrack, settings) => {\n        await docTrack.copy(e, settings.get('working_dir').composite).then(e => {\n            docTrack.open(e.path);\n        });\n    },\n    [NotebookAction.open]: (e, docTrack) => {\n        docTrack.open(e);\n    }\n};\nexport const getNestedFiles = async (path, docTrack) => {\n    return (await Promise.all((await docTrack.services.contents.get(path))\n        .content\n        .map((Item) => {\n        return Item.type === 'directory'\n            ? getNestedFiles(Item.path, docTrack)\n            : Item;\n    }))).flat(Infinity);\n};\nexport const getNotebooks = async (path, docTrack) => {\n    return (await getNestedFiles(path, docTrack))\n        .filter((Item) => Item.path.endsWith(IPYNB))\n        .map((Item) => ({\n        name: Item.name,\n        path: Item.path,\n        last_modified: Item.last_modified\n    }));\n};\n","export var NotebookAction;\n(function (NotebookAction) {\n    NotebookAction[\"open\"] = \"open\";\n    NotebookAction[\"clone\"] = \"clone\";\n})(NotebookAction || (NotebookAction = {}));\n","import { ReactWidget } from '@jupyterlab/apputils';\nimport { getNotebooks, actionCallbacks } from './lib';\nimport { notebookIcon, LabIcon } from '@jupyterlab/ui-components';\nimport React, { useState, useEffect } from 'react';\nimport { logoSVG } from './asset';\nimport moment from 'moment';\nexport const LabsLogo = () => {\n    const logoSVGBlob = new Blob([logoSVG], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(logoSVGBlob);\n    return (React.createElement(\"div\", { className: \"labsLogo\" },\n        React.createElement(\"img\", { src: url, alt: \"The EPI2ME Labs logo\" })));\n};\nconst LauncherHeader = ({}) => (React.createElement(\"div\", { className: \"tutorialsLauncherHeader\" },\n    React.createElement(LabsLogo, null),\n    React.createElement(\"h1\", null, \"Welcome to EPI2ME Labs\"),\n    React.createElement(\"p\", null, \"EPI2ME Labs maintains a growing collection of notebooks on a range of topics from basic quality control to genome assembly. These are free and open to use by anyone. Browse the list below and get started.\")));\nconst LauncherFooter = ({}) => (React.createElement(\"div\", { className: \"tutorialsLauncherFooter\" },\n    React.createElement(\"p\", null,\n        \"@2008 - \",\n        moment().year(),\n        \" Oxford Nanopore Technologies. All rights reserved\")));\nconst LauncherTooltip = ({ tooltip }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const handleToggleVisible = () => {\n        setIsVisible(!isVisible);\n    };\n    return (React.createElement(\"button\", { className: \"launcherTooltip\", onClick: handleToggleVisible, onMouseEnter: handleToggleVisible, onMouseLeave: handleToggleVisible },\n        React.createElement(\"div\", { className: \"launcherTooltipIcon\" }, \"?\"),\n        isVisible ? (React.createElement(\"p\", null, tooltip)) : ('')));\n};\nconst LauncherNotebookListItem = ({ TrackedNotebook, action, icon, }) => {\n    const { name, path, last_modified } = TrackedNotebook;\n    const handleExtractName = () => {\n        return name.split('_').join(' ').split('.ipynb').join('');\n    };\n    const handleFormatUpdated = () => {\n        return moment(last_modified).format(\"MMMM Do YYYY, h:mm:ss a\");\n    };\n    return (React.createElement(\"button\", { onClick: () => action() },\n        React.createElement(\"div\", null,\n            React.createElement(LabIcon.resolveReact, { icon: notebookIcon, className: \"tutorialIcon\", tag: \"span\", width: \"100%\", height: \"100%\" })),\n        React.createElement(\"div\", { className: \"tutorialDetails\" },\n            React.createElement(\"h3\", null, handleExtractName()),\n            React.createElement(\"p\", null,\n                \"Path: \",\n                path),\n            React.createElement(\"p\", null,\n                \"Last modified: \",\n                handleFormatUpdated())),\n        React.createElement(\"div\", { className: \"tutorialButton\" },\n            React.createElement(LabIcon.resolveReact, { icon: icon, className: \"tutorialButtonIcon\", tag: \"span\", width: \"20px\", height: \"20px\" }))));\n};\nconst LauncherNotebookList = ({ TrackedNotebookList, docTrack, setting }) => {\n    const { path, name, icon, tooltip, action } = TrackedNotebookList;\n    const [notebooks, setNotebooks] = useState([]);\n    const handleUpdateSections = async () => {\n        setNotebooks(await getNotebooks(path, docTrack));\n    };\n    useEffect(() => {\n        handleUpdateSections();\n        const slotHandleUpdateSections = (e) => {\n            handleUpdateSections();\n        };\n        const fileSignal = docTrack.services.contents.fileChanged;\n        fileSignal.connect(slotHandleUpdateSections);\n        return () => {\n            fileSignal.disconnect(slotHandleUpdateSections);\n        };\n    }, []);\n    if (notebooks.length === 0) {\n        return (React.createElement(React.Fragment, null));\n    }\n    return (React.createElement(\"div\", { className: \"tutorialsLauncherList\" },\n        React.createElement(\"div\", { className: \"tutorialsLauncherListHeader\" },\n            React.createElement(\"h2\", null, name),\n            React.createElement(\"ul\", { className: \"tutorialsLauncherListHeaderToolbar\" },\n                React.createElement(\"li\", null,\n                    React.createElement(LauncherTooltip, { tooltip: tooltip })))),\n        React.createElement(\"ul\", { className: \"tutorialsLauncherListGrid\" }, notebooks.map(Item => (React.createElement(\"li\", { key: `notebookItem-${Item.path}` },\n            React.createElement(LauncherNotebookListItem, { TrackedNotebook: Item, action: () => actionCallbacks[action](Item.path, docTrack, setting), icon: icon })))))));\n};\nexport class Epi2melabsLauncherWidget extends ReactWidget {\n    constructor(setting, docTrack, sections) {\n        super();\n        this.docTrack = docTrack;\n        this.sections = sections;\n        this.setting = setting;\n        this.addClass('jp-ReactWidget');\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"tutorialsLauncher\" },\n            React.createElement(LauncherHeader, null),\n            this.sections.map(Item => (React.createElement(LauncherNotebookList, { key: `notebook-${Item.name}`, TrackedNotebookList: Item, docTrack: this.docTrack, setting: this.setting }))),\n            React.createElement(LauncherFooter, null)));\n    }\n}\n"],"sourceRoot":""}