"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Upload a signature to an image.


Usage
=====

   oci artifacts container image-signature create [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment in which the container repository exists.

--image-id [text]

The OCID of the container image.

Example:

   ocid1.containerimage.oc1..exampleuniqueID

--kms-key-id [text]

The OCID of the kmsKeyId used to sign the container image.

Example:

   ocid1.key.oc1..exampleuniqueID

--kms-key-version-id [text]

The OCID of the kmsKeyVersionId used to sign the container image.

Example:

   ocid1.keyversion.oc1..exampleuniqueID

--message [text]

The base64 encoded signature payload that was signed.

--signature [text]

The signature of the message field using the kmsKeyId, the
kmsKeyVersionId, and the signingAlgorithm.

--signing-algorithm [text]

The algorithm to be used for signing. These are the only supported
signing algorithms for container images.

Accepted values are:

   SHA_224_RSA_PKCS_PSS, SHA_256_RSA_PKCS_PSS, SHA_384_RSA_PKCS_PSS, SHA_512_RSA_PKCS_PSS


Optional Parameters
===================

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource. The resource will be
updated or deleted only if the etag you provide matches the resource's
current etag value.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
