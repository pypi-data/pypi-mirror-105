# coding: utf-8

"""
    CLOUD API

    An enterprise-grade Infrastructure is provided as a Service (IaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.   The API allows you to perform a variety of management tasks such as spinning up additional servers, adding volumes, adjusting networking, and so forth. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.  # noqa: E501

    The version of the OpenAPI document: 6.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import ionoscloud
from ionoscloud.api.nat_gateways_api import NATGatewaysApi  # noqa: E501
from ionoscloud.rest import ApiException


class TestNATGatewaysApi(unittest.TestCase):
    """NATGatewaysApi unit test stubs"""

    def setUp(self):
        self.api = ionoscloud.api.nat_gateways_api.NATGatewaysApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_datacenters_natgateways_delete(self):
        """Test case for datacenters_natgateways_delete

        Remove a NAT gateway  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_find_by_nat_gateway_id(self):
        """Test case for datacenters_natgateways_find_by_nat_gateway_id

        Retrieve a NAT gateway  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_flowlogs_delete(self):
        """Test case for datacenters_natgateways_flowlogs_delete

        Remove Flow Log from NAT Gateway  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_flowlogs_find_by_flow_log_id(self):
        """Test case for datacenters_natgateways_flowlogs_find_by_flow_log_id

        Retrieve a Flow Log of the NAT Gateway  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_flowlogs_get(self):
        """Test case for datacenters_natgateways_flowlogs_get

        List NAT Gateway Flow Logs  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_flowlogs_patch(self):
        """Test case for datacenters_natgateways_flowlogs_patch

        Partially modify a Flow Log of the NAT Gateway  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_flowlogs_post(self):
        """Test case for datacenters_natgateways_flowlogs_post

        Add a NAT Gateways Flow Log  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_flowlogs_put(self):
        """Test case for datacenters_natgateways_flowlogs_put

        Modify a Flow Log of the NAT Gateway  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_get(self):
        """Test case for datacenters_natgateways_get

        List NAT Gateways  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_patch(self):
        """Test case for datacenters_natgateways_patch

        Partially update a NAT gateway  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_post(self):
        """Test case for datacenters_natgateways_post

        Create a NAT Gateway  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_put(self):
        """Test case for datacenters_natgateways_put

        Update a NAT gateway  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_rules_delete(self):
        """Test case for datacenters_natgateways_rules_delete

        Remove rule from NAT Gateway  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_rules_find_by_nat_gateway_rule_id(self):
        """Test case for datacenters_natgateways_rules_find_by_nat_gateway_rule_id

        Retrieve a NAT Gateway Rule  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_rules_get(self):
        """Test case for datacenters_natgateways_rules_get

        List NAT Gateways Rules  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_rules_patch(self):
        """Test case for datacenters_natgateways_rules_patch

        Partially modify a rule of the NAT gateway  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_rules_post(self):
        """Test case for datacenters_natgateways_rules_post

        Create a NAT Gateway Rule  # noqa: E501
        """
        pass

    def test_datacenters_natgateways_rules_put(self):
        """Test case for datacenters_natgateways_rules_put

        Modify a rule of the NAT gateway  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
