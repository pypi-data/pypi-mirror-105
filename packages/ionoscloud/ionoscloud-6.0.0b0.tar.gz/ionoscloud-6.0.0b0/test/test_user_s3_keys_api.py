# coding: utf-8

"""
    CLOUD API

    An enterprise-grade Infrastructure is provided as a Service (IaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.   The API allows you to perform a variety of management tasks such as spinning up additional servers, adding volumes, adjusting networking, and so forth. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.  # noqa: E501

    The version of the OpenAPI document: 6.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import ionoscloud
from ionoscloud.api.user_s3_keys_api import UserS3KeysApi  # noqa: E501
from ionoscloud.rest import ApiException


class TestUserS3KeysApi(unittest.TestCase):
    """UserS3KeysApi unit test stubs"""

    def setUp(self):
        self.api = ionoscloud.api.user_s3_keys_api.UserS3KeysApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_um_users_s3keys_delete(self):
        """Test case for um_users_s3keys_delete

        Delete an S3 Key  # noqa: E501
        """
        pass

    def test_um_users_s3keys_find_by_key_id(self):
        """Test case for um_users_s3keys_find_by_key_id

        Retrieve given S3 Key belonging to the given User  # noqa: E501
        """
        pass

    def test_um_users_s3keys_get(self):
        """Test case for um_users_s3keys_get

        Retrieve a User's S3 keys  # noqa: E501
        """
        pass

    def test_um_users_s3keys_post(self):
        """Test case for um_users_s3keys_post

        Create a S3 Key for the given User  # noqa: E501
        """
        pass

    def test_um_users_s3keys_put(self):
        """Test case for um_users_s3keys_put

        Modify a S3 key having the given key id  # noqa: E501
        """
        pass

    def test_um_users_s3ssourl_get(self):
        """Test case for um_users_s3ssourl_get

        Retrieve S3 object storage single signon URL for the given user  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
