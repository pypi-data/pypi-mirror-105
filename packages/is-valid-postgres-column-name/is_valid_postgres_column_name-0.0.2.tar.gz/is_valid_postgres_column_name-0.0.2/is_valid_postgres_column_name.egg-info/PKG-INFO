Metadata-Version: 2.1
Name: is-valid-postgres-column-name
Version: 0.0.2
Summary: Allows you to check if a given string can be PostgreSQL column name
Home-page: https://github.com/tomwojcik/is_valid_postgres_column
Author: Tom Wojcik
License: MIT
Download-URL: https://github.com/tomwojcik/is_valid_postgres_column/archive/0.0.2.tar.gz
Description: I found it weird there's no simple way to check if a given string can be a PostgreSQL column name.
        Although, to my understanding, you can escape with quotation marks some names that are otherwise invalid,
        I don't think escaping such a thing is a good idea.
        
        This validation is required if your column name can be dynamically generated.
        
        # How to use
        
        ```python
        >>> from is_valid_postgres_column_name import is_valid_postgres_column_name
        >>> is_valid_postgres_column_name("column_A")
        >>> True
        >>> is_valid_postgres_column_name("1column_A")
        >>> False
        ```
        
        All PostgreSQL versions are supported. The only difference between versions, to my knowledge, are reserved keywords.
        ```python
        >>> is_valid_postgres_column_name("column_A", version=7.1)
        >>> True
        ```
        
        # Installation
        
        ```shell
        $ pip install -U is_valid_postgres_column_name
        ```
        
        # Requirements
        
        Python 3.0+
        
        # Dependencies
        
        None.
        
        # Contribution
        
        Welcome.
        
Keywords: psycopg2,psycopg3,postgres,postgresql
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.0
Description-Content-Type: text/markdown
