Metadata-Version: 2.1
Name: asmc-preparedecoding
Version: 2.1
Summary: Prepare decoding quantities for ASMC & FastSMC
Home-page: https://github.com/PalamaraLab/PrepareDecoding/
Author: PalamaraLab (https://palamaralab.github.io/)
License: UNKNOWN
Platform: UNKNOWN
Description-Content-Type: text/markdown
Requires-Dist: numpy

[![Unit tests: Windows](https://github.com/PalamaraLab/PrepareDecoding/workflows/Unit%20tests:%20Windows/badge.svg)](https://github.com/PalamaraLab/PrepareDecoding/actions)
[![Unit tests: Ubuntu](https://github.com/PalamaraLab/PrepareDecoding/workflows/Unit%20tests:%20Ubuntu/badge.svg)](https://github.com/PalamaraLab/PrepareDecoding/actions)
[![Unit tests: macOS](https://github.com/PalamaraLab/PrepareDecoding/workflows/Unit%20tests:%20macOS/badge.svg)](https://github.com/PalamaraLab/PrepareDecoding/actions)
[![Regression test](https://github.com/PalamaraLab/PrepareDecoding/workflows/Regression%20test/badge.svg)](https://github.com/PalamaraLab/PrepareDecoding/actions)

[![Static analysis checks](https://github.com/PalamaraLab/PrepareDecoding/workflows/Static%20analysis%20checks/badge.svg)](https://github.com/PalamaraLab/PrepareDecoding/actions)
[![Sanitiser checks](https://github.com/PalamaraLab/PrepareDecoding/workflows/Sanitiser%20checks/badge.svg)](https://github.com/PalamaraLab/PrepareDecoding/actions)
[![codecov](https://codecov.io/gh/PalamaraLab/PrepareDecoding/branch/master/graph/badge.svg)](https://codecov.io/gh/PalamaraLab/PrepareDecoding)
[![BCH compliance](https://bettercodehub.com/edge/badge/PalamaraLab/PrepareDecoding?branch=master)](https://bettercodehub.com/results/PalamaraLab/PrepareDecoding)

# ASMC Prepare Decoding

Tool to compute decoding quantities.

## Quickstart

### Install the Python module from PyPI

Most functionality is available through a Python module which can be installed with:

```bash
pip install asmc-preparedecoding
```

This Python module is available on Linux, macOS and Windows.

Some additional functionality, for creating CSFS, requires the additional dependency [smcpp](https://github.com/popgenmethods/smcpp/), which is not available via PyPI.
If you require this functionality, you should additionally [follow these instructions](#installing-smcpp) to install smcpp.

Examples for using the Python module can be found in the notebooks directory:
- [creating decoding quantities from precomputed CSFS](https://github.com/PalamaraLab/PrepareDecoding/blob/master/notebooks/CreateDecodingQuantitiesFromPrecomputedCSFS.ipynb)
- [creating decoding quantities from scratch](https://github.com/PalamaraLab/PrepareDecoding/blob/master/notebooks/CreateDecodingQuantitiesFromScratch.ipynb) (requires smcpp)

### Installing smcpp

The optional smcpp dependency is not available on PyPI, and itself requires a few additional dependencies.

On **Linux**, run

```bash
sudo apt install libgmp-dev libmpfr-dev libgsl0-dev
```

on **macOS**, run

```bash
brew install mpfr gmp gsl
```

Then, we recommend starting from a clean virtual environment. 
Switch to the source directory and run:

```bash
python3 -m venv venv
source venv/bin/activate
python -m pip install --upgrade pip setuptools wheel
python -m pip install asmc-preparedecoding
python -m pip install git+https://github.com/popgenmethods/smcpp/@v1.15.3
```

## License

This project is currently released under the GNU General Public License Version 3.

# Release Notes

## v2.1 (2021-05-13)

Default demographies are now bundled with Prepare Decoding.
You can now either supply your own demography file, or choose from the following default demographies:
- ACB, ASW, BEB, CDX, CEU, CHB, CHS, CLM, ESN, FIN, GBR, GIH, GWD, IBS, ITU, JPT, KHV, LWK, MSL, MXL, PEL, PJL, PUR, STU, TSI, YRI

### Breaking changes

- When using the C++ or Python libraries, methods that previous specified a demography file as a string now require an instance of a lightweight strong type `Demography`:
  - In C++, to specify a file: `Demography d("/path/to/demography.demo");`
  - In C++, to specify a default: `Demography d("CEU");`
  - In Python, to specify a file: `d = Demography('/path/to/demography.demo')`
  - In C++, to specify a default: `d = Demography('CEU')`
- A default-constructed Demography will use the default CEU.

### Other changes

- None

## v2.0 (2021-04-22)

Computing CSFS values is now bundled with this project, and no longer relies on the optional `smcpp` dependency.

### Breaking changes

- Python method `create_from_precomputed_csfs` is renamed `prepare_decoding_precalculated_csfs`, but it behaves identically.
- Python method `create_from_scratch` is renamed `calculate_csfs_and_prepare_decoding`, and no longer requires the Python package `smcpp`.

### Other changes

- Some floating point numbers in output files are now written with higher precision.

## v1.1 (2021-03-19)

Minor fixes.

### Breaking changes

- None

### Other changes

- Python wheels now also built for Windows as well as macOS and Linux.
- Corrected syntax in package README.

## v1.0 (2021-03-18)

First public release of ASMC Prepare Decoding, with functionality as described and used in [these notebooks](https://github.com/PalamaraLab/PrepareDecoding/tree/master/notebooks).

