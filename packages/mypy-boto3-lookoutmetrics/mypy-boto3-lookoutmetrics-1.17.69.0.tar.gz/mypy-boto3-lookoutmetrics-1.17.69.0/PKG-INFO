Metadata-Version: 2.1
Name: mypy-boto3-lookoutmetrics
Version: 1.17.69.0
Summary: Type annotations for boto3.LookoutMetrics 1.17.69 service, generated by mypy-boto3-buider 4.10.0
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Description: # mypy-boto3-lookoutmetrics
        
        [![PyPI - mypy-boto3-lookoutmetrics](https://img.shields.io/pypi/v/mypy-boto3-lookoutmetrics.svg?color=blue)](https://pypi.org/project/mypy-boto3-lookoutmetrics)
        [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-lookoutmetrics.svg?color=blue)](https://pypi.org/project/mypy-boto3-lookoutmetrics)
        [![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
        [![PyPI - Downloads](https://img.shields.io/pypi/dw/mypy-boto3-lookoutmetrics?color=blue)](https://pypistats.org/packages/mypy-boto3-lookoutmetrics)
        
        ![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/master/logo.png)
        
        Type annotations for
        [boto3.LookoutMetrics 1.17.69](https://boto3.amazonaws.com/v1/documentation/api/1.17.69/reference/services/lookoutmetrics.html#LookoutMetrics)
        service compatible with [VSCode](https://code.visualstudio.com/),
        [PyCharm](https://www.jetbrains.com/pycharm/),
        [Emacs](https://www.gnu.org/software/emacs/),
        [Sublime Text](https://www.sublimetext.com/),
        [mypy](https://github.com/python/mypy),
        [pyright](https://github.com/microsoft/pyright) and other tools.
        
        Generated by
        [mypy-boto3-buider 4.10.0](https://github.com/vemel/mypy_boto3_builder).
        
        More information can be found on
        [boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in
        [mypy-boto3-lookoutmetrics docs](https://github.com/vemel/mypy_boto3_builder/service_docs/mypy_boto3_lookoutmetrics/README.md)
        
        See how it helps to find and fix potential bugs:
        
        ![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/master/demo.gif)
        
        - [mypy-boto3-lookoutmetrics](#mypy-boto3-lookoutmetrics)
          - [How to install](#how-to-install)
          - [Usage](#usage)
            - [VSCode](#vscode)
            - [PyCharm](#pycharm)
            - [Other IDEs](#other-ides)
            - [mypy](#mypy)
            - [pyright](#pyright)
          - [Explicit type annotations](#explicit-type-annotations)
            - [Client annotations](#client-annotations)
            - [Literals](#literals)
            - [Typed dictionaries](#typed-dictionaries)
        
        ## How to install
        
        Install `boto3-stubs` for `LookoutMetrics` service.
        
        ```bash
        python -m pip install boto3-stubs[lookoutmetrics]
        ```
        
        ## Usage
        
        ### VSCode
        
        - Install
          [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
        - Install
          [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
        - Set `Pylance` as your Python Language Server
        - Install `boto-stubs[lookoutmetrics]` in your environment:
          `python -m pip install 'boto3-stubs[lookoutmetrics]'`
        
        Both type checking and auto-complete should work for `LookoutMetrics` service.
        No explicit type annotations required, write your `boto3` code as usual.
        
        ### PyCharm
        
        - Install `boto-stubs[lookoutmetrics]` in your environment:
          `python -m pip install 'boto3-stubs[lookoutmetrics]'`
        
        Both type checking and auto-complete should work for `LookoutMetrics` service.
        No explicit type annotations required, write your `boto3` code as usual.
        Auto-complete can be slow on big projects or if you have a lot of installed
        `boto3-stubs` submodules.
        
        ### Other IDEs
        
        Not tested, but as long as your IDE support `mypy` or `pyright`, everything
        should work.
        
        ### mypy
        
        - Install `mypy`: `python -m pip install mypy`
        - Install `boto-stubs[lookoutmetrics]` in your environment:
          `python -m pip install 'boto3-stubs[lookoutmetrics]'`
        - Run `mypy` as usual
        
        Type checking should work for `LookoutMetrics` service. No explicit type
        annotations required, write your `boto3` code as usual.
        
        ### pyright
        
        - Install `pyright`: `yarn global add pyright`
        - Install `boto-stubs[lookoutmetrics]` in your environment:
          `python -m pip install 'boto3-stubs[lookoutmetrics]'`
        - Optionally, you can install `boto3-stubs` to `typings` folder.
        
        Type checking should work for `LookoutMetrics` service. No explicit type
        annotations required, write your `boto3` code as usual.
        
        ## Explicit type annotations
        
        ### Client annotations
        
        `LookoutMetricsClient` provides annotations for
        `boto3.client("lookoutmetrics")`.
        
        ```python
        import boto3
        
        from mypy_boto3_lookoutmetrics import LookoutMetricsClient
        
        client: LookoutMetricsClient = boto3.client("lookoutmetrics")
        
        # now client usage is checked by mypy and IDE should provide code auto-complete
        
        # works for session as well
        session = boto3.session.Session(region="us-west-1")
        session_client: LookoutMetricsClient = session.client("lookoutmetrics")
        ```
        
        ### Literals
        
        `mypy_boto3_lookoutmetrics.literals` module contains literals extracted from
        shapes that can be used in user code for type checking.
        
        ```python
        from mypy_boto3_lookoutmetrics.literals import (
            AggregationFunction,
            AlertStatus,
            AlertType,
            AnomalyDetectionTaskStatus,
            AnomalyDetectorStatus,
            CSVFileCompression,
            Frequency,
            JsonFileCompression,
        )
        
        def check_value(value: AggregationFunction) -> bool:
            ...
        ```
        
        ### Typed dictionaries
        
        `mypy_boto3_lookoutmetrics.type_defs` module contains structures and shapes
        assembled to typed dictionaries for additional type checking.
        
        ```python
        from mypy_boto3_lookoutmetrics.type_defs import (
            ActionTypeDef,
            AlertSummaryTypeDef,
            AlertTypeDef,
            AnomalyDetectorConfigSummaryTypeDef,
            AnomalyDetectorConfigTypeDef,
            AnomalyDetectorSummaryTypeDef,
            AnomalyGroupStatisticsTypeDef,
            AnomalyGroupSummaryTypeDef,
            AnomalyGroupTimeSeriesFeedbackTypeDef,
            AnomalyGroupTimeSeriesTypeDef,
            AnomalyGroupTypeDef,
            AppFlowConfigTypeDef,
            CloudWatchConfigTypeDef,
            ContributionMatrixTypeDef,
            CreateAlertResponseTypeDef,
            CreateAnomalyDetectorResponseTypeDef,
            CreateMetricSetResponseTypeDef,
            CsvFormatDescriptorTypeDef,
            DescribeAlertResponseTypeDef,
            DescribeAnomalyDetectionExecutionsResponseTypeDef,
            DescribeAnomalyDetectorResponseTypeDef,
            DescribeMetricSetResponseTypeDef,
            DimensionContributionTypeDef,
            DimensionNameValueTypeDef,
            DimensionValueContributionTypeDef,
            ExecutionStatusTypeDef,
            FileFormatDescriptorTypeDef,
            GetAnomalyGroupResponseTypeDef,
            GetFeedbackResponseTypeDef,
            GetSampleDataResponseTypeDef,
            ItemizedMetricStatsTypeDef,
            JsonFormatDescriptorTypeDef,
            LambdaConfigurationTypeDef,
            ListAlertsResponseTypeDef,
            ListAnomalyDetectorsResponseTypeDef,
            ListAnomalyGroupSummariesResponseTypeDef,
            ListAnomalyGroupTimeSeriesResponseTypeDef,
            ListMetricSetsResponseTypeDef,
            ListTagsForResourceResponseTypeDef,
            MetricLevelImpactTypeDef,
            MetricSetSummaryTypeDef,
            MetricSourceTypeDef,
            MetricTypeDef,
            RDSSourceConfigTypeDef,
            RedshiftSourceConfigTypeDef,
            S3SourceConfigTypeDef,
            SNSConfigurationTypeDef,
            SampleDataS3SourceConfigTypeDef,
            TimeSeriesFeedbackTypeDef,
            TimeSeriesTypeDef,
            TimestampColumnTypeDef,
            UpdateAnomalyDetectorResponseTypeDef,
            UpdateMetricSetResponseTypeDef,
            VpcConfigurationTypeDef,
        )
        
        def get_structure() -> ActionTypeDef:
            return {
              ...
            }
        ```
        
Keywords: boto3 lookoutmetrics type-annotations boto3-stubs mypy typeshed autocomplete auto-generated
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
